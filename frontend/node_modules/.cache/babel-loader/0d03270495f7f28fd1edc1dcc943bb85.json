{"ast":null,"code":"var _jsxFileName = \"/home/saif/Desktop/projects/djreact/frontend/gui/src/container/Login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { NavLink } from 'react-router-dom';\nimport * as actio from '../store/action/auth';\nconst antIcon = /*#__PURE__*/React.createElement(LoadingOutlined, {\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 17\n  }\n});\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = values => {\n      console.log('Success:', values);\n      this.props.onAuth(values.username, values.password);\n      this.props.history.push(\"/\");\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n  }\n\n  render() {\n    let errorMess = null;\n\n    if (this.props.error) {\n      errorMess = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 26\n        }\n      }, this.props.error.message);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, errorMess, this.props.loading ? /*#__PURE__*/React.createElement(Spin, {\n      indicator: antIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        margin: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Login\"), \"Or\", /*#__PURE__*/React.createElement(NavLink, {\n      style: {\n        marginRight: '10px'\n      },\n      to: \"/signup/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"Signup\"))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actio.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/saif/Desktop/projects/djreact/frontend/gui/src/container/Login.js"],"names":["React","Form","Input","Button","Checkbox","Spin","connect","LoadingOutlined","NavLink","actio","antIcon","fontSize","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","Component","onFinish","values","console","log","props","onAuth","username","password","history","push","onFinishFailed","errorInfo","render","errorMess","error","message","loading","remember","required","margin","marginRight","mapStateToProps","state","mapDispatchToProps","dispatch","authLogin"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { Spin } from 'antd';\nimport {connect} from 'react-redux' \nimport { LoadingOutlined } from '@ant-design/icons';\nimport { NavLink } from 'react-router-dom'\nimport * as actio from '../store/action/auth'\n\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\n\nclass Login extends React.Component {\n\n     onFinish = values => {\n        \n        \n        console.log('Success:', values);\n        this.props.onAuth(values.username, values.password)\n        this.props.history.push(\"/\")\n\n      };\n\n     onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n      };\n\n    render() {\n\n\n        let errorMess = null;\n        if(this.props.error) {\n\n            errorMess = (<p>{this.props.error.message}</p>);\n        }\n\n        return (\n            <div>\n                {errorMess}\n                {\n                    this.props.loading ? <Spin indicator={antIcon} />\n\n                    :\n                \n\n            \n            <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{\n                remember: true,\n                \n            }}\n            onFinish={this.onFinish}\n            onFinishFailed={this.onFinishFailed}\n            \n            >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your username!',\n                },\n                ]}\n            >\n                <Input />\n            </Form.Item  >\n\n            <Form.Item {...tailLayout}\n                label=\"Password\"\n                name=\"password\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item>\n                \n            </Form.Item>\n\n            <Form.Item >\n                <Button type=\"primary\" htmlType=\"submit\" style={{margin : '10px'}} >\n                Login\n                </Button>\n                Or \n                <NavLink style={{marginRight: '10px'}} to='/signup/'>\n                    Signup\n                </NavLink>\n            </Form.Item>\n            </Form>\n    }\n            </div>\n        );\n    }\n  \n\n  \n};  \n\nconst mapStateToProps = state => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actio.authLogin(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}