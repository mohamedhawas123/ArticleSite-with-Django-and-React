{"ast":null,"code":"var _jsxFileName = \"/home/saif/Desktop/projects/djreact/frontend/gui/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport CustomLayout from './container/layout';\nimport Article from './component/articls';\nimport ArticleList from './container/articleListView';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './routes';\nimport reducer from './store/reducer/auth';\nimport { connect } from 'react-redux';\nimport * as actions from './store/action/auth';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSign();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomLayout, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BaseRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSign: () => dispatch(actions.checkState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/saif/Desktop/projects/djreact/frontend/gui/src/App.js"],"names":["React","Component","CustomLayout","Article","ArticleList","BrowserRouter","Router","BaseRouter","reducer","connect","actions","App","componentDidMount","props","onTryAutoSign","render","mapStateToProps","state","isAuthenticated","token","mapDispatchToProps","dispatch","checkState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,oBAAP;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAG1BW,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,aAAX;AACD;;AAGDC,EAAAA,MAAM,GAAI;AACR,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD,oBAAkB,KAAKF,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CADF,CADA;AAYD;;AArByB;;AA0B3B,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACLC,IAAAA,eAAe,EAAED,KAAK,CAACE,KAAN,KAAgB;AAD5B,GAAP;AAGD,CAJA;;AAMD,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLP,IAAAA,aAAa,EAAE,MAAMO,QAAQ,CAACX,OAAO,CAACY,UAAR,EAAD;AADxB,GAAP;AAGD,CAJD;;AAQA,eAAeb,OAAO,CAACO,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport CustomLayout from './container/layout'\nimport Article from './component/articls'\nimport ArticleList from './container/articleListView'\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport BaseRouter from './routes'\nimport reducer from './store/reducer/auth';\nimport { connect } from 'react-redux'\nimport * as actions from './store/action/auth'\n\nclass App extends Component {\n\n\n  componentDidMount() {\n    this.props.onTryAutoSign()\n  }\n\n\n  render () {\n    return (\n    <div className=\"App\">\n      <Router>\n        <CustomLayout {...this.props} >\n        <BaseRouter />\n      </CustomLayout>\n\n      </Router>\n      \n     \n    </div>\n  );\n  }\n  \n}\n\n\n const mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSign: () => dispatch(actions.checkState())\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}